// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Calculator Basic Rendering Renders correctly with no result or spinner 1`] = `
<div
  class="card bg-light p-3"
>
  <div
    class="form"
  >
    <div
      class="form-group"
    >
      <label
        for="input1"
      >
        Input 1: 
      </label>
      <input
        data-testid="input1"
        type="number"
        value="0"
      />
    </div>
    <div
      class="form-group"
    >
      <label
        for="input2"
      >
        Input 2: 
      </label>
      <input
        data-testid="input2"
        type="number"
        value="0"
      />
    </div>
  </div>
  <div>
    <button
      class="btn btn-primary m-1 font-weight-bold"
    >
      +
    </button>
    <button
      class="btn btn-primary m-1 font-weight-bold"
    >
      -
    </button>
    <button
      class="btn btn-primary m-1 font-weight-bold"
    >
      x
    </button>
    <button
      class="btn btn-primary m-1 font-weight-bold"
    >
      /
    </button>
  </div>
  <h1>
    <span
      data-testid="latestResult"
    />
  </h1>
</div>
`;

exports[`Calculator Basic Rendering Renders spinner 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="card bg-light p-3"
      >
        <div
          class="form"
        >
          <div
            class="form-group"
          >
            <label
              for="input1"
            >
              Input 1: 
            </label>
            <input
              data-testid="input1"
              disabled=""
              type="number"
              value="0"
            />
          </div>
          <div
            class="form-group"
          >
            <label
              for="input2"
            >
              Input 2: 
            </label>
            <input
              data-testid="input2"
              disabled=""
              type="number"
              value="0"
            />
          </div>
        </div>
        <div>
          <button
            class="btn btn-primary m-1 font-weight-bold"
            disabled=""
          >
            +
          </button>
          <button
            class="btn btn-primary m-1 font-weight-bold"
            disabled=""
          >
            -
          </button>
          <button
            class="btn btn-primary m-1 font-weight-bold"
            disabled=""
          >
            x
          </button>
          <button
            class="btn btn-primary m-1 font-weight-bold"
            disabled=""
          >
            /
          </button>
        </div>
        <h1>
          <span
            class="fa fa-circle-o-notch fa-spin"
            data-testid="spinner"
          />
        </h1>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="card bg-light p-3"
    >
      <div
        class="form"
      >
        <div
          class="form-group"
        >
          <label
            for="input1"
          >
            Input 1: 
          </label>
          <input
            data-testid="input1"
            disabled=""
            type="number"
            value="0"
          />
        </div>
        <div
          class="form-group"
        >
          <label
            for="input2"
          >
            Input 2: 
          </label>
          <input
            data-testid="input2"
            disabled=""
            type="number"
            value="0"
          />
        </div>
      </div>
      <div>
        <button
          class="btn btn-primary m-1 font-weight-bold"
          disabled=""
        >
          +
        </button>
        <button
          class="btn btn-primary m-1 font-weight-bold"
          disabled=""
        >
          -
        </button>
        <button
          class="btn btn-primary m-1 font-weight-bold"
          disabled=""
        >
          x
        </button>
        <button
          class="btn btn-primary m-1 font-weight-bold"
          disabled=""
        >
          /
        </button>
      </div>
      <h1>
        <span
          class="fa fa-circle-o-notch fa-spin"
          data-testid="spinner"
        />
      </h1>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Calculator Basic Rendering Renders with result 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="card bg-light p-3"
      >
        <div
          class="form"
        >
          <div
            class="form-group"
          >
            <label
              for="input1"
            >
              Input 1: 
            </label>
            <input
              data-testid="input1"
              type="number"
              value="0"
            />
          </div>
          <div
            class="form-group"
          >
            <label
              for="input2"
            >
              Input 2: 
            </label>
            <input
              data-testid="input2"
              type="number"
              value="0"
            />
          </div>
        </div>
        <div>
          <button
            class="btn btn-primary m-1 font-weight-bold"
          >
            +
          </button>
          <button
            class="btn btn-primary m-1 font-weight-bold"
          >
            -
          </button>
          <button
            class="btn btn-primary m-1 font-weight-bold"
          >
            x
          </button>
          <button
            class="btn btn-primary m-1 font-weight-bold"
          >
            /
          </button>
        </div>
        <h1>
          <span
            data-testid="latestResult"
          >
            Some Result
          </span>
        </h1>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="card bg-light p-3"
    >
      <div
        class="form"
      >
        <div
          class="form-group"
        >
          <label
            for="input1"
          >
            Input 1: 
          </label>
          <input
            data-testid="input1"
            type="number"
            value="0"
          />
        </div>
        <div
          class="form-group"
        >
          <label
            for="input2"
          >
            Input 2: 
          </label>
          <input
            data-testid="input2"
            type="number"
            value="0"
          />
        </div>
      </div>
      <div>
        <button
          class="btn btn-primary m-1 font-weight-bold"
        >
          +
        </button>
        <button
          class="btn btn-primary m-1 font-weight-bold"
        >
          -
        </button>
        <button
          class="btn btn-primary m-1 font-weight-bold"
        >
          x
        </button>
        <button
          class="btn btn-primary m-1 font-weight-bold"
        >
          /
        </button>
      </div>
      <h1>
        <span
          data-testid="latestResult"
        >
          Some Result
        </span>
      </h1>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
